/*
 * Created on 2017-02-23 ( Date ISO 2017-02-23 - Time 15:38:19 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
 */
package td.td3.service2.commons;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.PersistenceException;

/**
 * JPA environment for JPA operations execution <br>
 * Provided by Telosys Tools for JPA testing
 * 
 */
public class JpaEnvironment {

	private final static String persistenceUnitName = "td" ; 
	
	private final static EntityManagerFactory emf = Persistence.createEntityManagerFactory(persistenceUnitName); 
	
	public final static String getPersistenceUnitName() {
		return persistenceUnitName ;
	}
	
	public final static EntityManagerFactory getEntityManagerFactory() {
		return emf ;
	}
	
	public final static Object executeWithTransaction(JpaOperation operation) throws PersistenceException {
		
		Object result = null ;
		EntityManager em = emf.createEntityManager();
		try {
			EntityTransaction transaction = em.getTransaction();

			try {
				// Begin Transaction
				transaction.begin();
				
				// Execute application JPA operation with the current EntityManager
				result = operation.execute(em);
				
				// Commit Transaction
				transaction.commit();
				
			} finally {
				// Rollback Transaction if Transaction is still active ( Commit not done )
				if (transaction.isActive())
					transaction.rollback();
			}
		} finally {
			// Ensure EntityManager is closed 
			em.close();
		}
		
		return result ;
	}

	public final static Object executeWithoutTransaction(JpaOperation operation) throws PersistenceException {
		
		Object result = null ;
		EntityManager em = emf.createEntityManager();
		try {
				// Execute application JPA operation with the current EntityManager
				result = operation.execute(em);
				
		} finally {
			// Ensure EntityManager is closed 
			em.close();
		}
		
		return result ;
	}
	
}
